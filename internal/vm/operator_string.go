// Code generated by "stringer -type=Operator -linecomment"; DO NOT EDIT.

package vm

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[OpNoop-0]
	_ = x[OpPop-1]
	_ = x[OpReturn-2]
	_ = x[OpReturnValue-3]
	_ = x[OpAdd-4]
	_ = x[OpSub-5]
	_ = x[OpMul-6]
	_ = x[OpDiv-7]
	_ = x[OpMod-8]
	_ = x[OpPow-9]
	_ = x[OpBwAnd-10]
	_ = x[OpBwOr-11]
	_ = x[OpBwXor-12]
	_ = x[OpBwNot-13]
	_ = x[OpShiftLeft-14]
	_ = x[OpShiftRight-15]
	_ = x[OpEqual-16]
	_ = x[OpNotEqual-17]
	_ = x[OpIdentical-18]
	_ = x[OpNotIdentical-19]
	_ = x[OpGreater-20]
	_ = x[OpLess-21]
	_ = x[OpGreaterOrEqual-22]
	_ = x[OpLessOrEqual-23]
	_ = x[OpCompare-24]
	_ = x[OpArrayInit-25]
	_ = x[OpArrayDimLoad-26]
	_ = x[OpArrayDimAssign-27]
	_ = x[OpConcat-28]
	_ = x[_opOneOperand-28]
	_ = x[OpAssertType-29]
	_ = x[OpAssign-30]
	_ = x[OpAssignAdd-31]
	_ = x[OpAssignSub-32]
	_ = x[OpAssignMul-33]
	_ = x[OpAssignDiv-34]
	_ = x[OpAssignMod-35]
	_ = x[OpAssignPow-36]
	_ = x[OpAssignBwAnd-37]
	_ = x[OpAssignBwOr-38]
	_ = x[OpAssignBwXor-39]
	_ = x[OpAssignConcat-40]
	_ = x[OpAssignShiftLeft-41]
	_ = x[OpAssignShiftRight-42]
	_ = x[OpCast-43]
	_ = x[OpPreIncrement-44]
	_ = x[OpPostIncrement-45]
	_ = x[OpPreDecrement-46]
	_ = x[OpPostDecrement-47]
	_ = x[OpLoad-48]
	_ = x[OpLoadRef-49]
	_ = x[OpConst-50]
	_ = x[OpJump-51]
	_ = x[OpJumpTrue-52]
	_ = x[OpJumpFalse-53]
	_ = x[OpCall-54]
	_ = x[OpEcho-55]
}

const _Operator_name = "NOOPPOPRETURNRETURN_VALADDSUBMULDIVMODPOWBW_ANDBW_ORBW_XORBW_NOTLSHIFTRSHIFTEQUALNOT_EQUALIDENTICALNOT_IDENTICALGTLTGTELTECOMPAREARRAY_INITARRAY_DIM_LOADARRAY_DIM_ASSIGNCONCATASSERT_TYPEASSIGNASSIGN_ADDASSIGN_SUBASSIGN_MULASSIGN_DIVASSIGN_MODASSIGN_POWASSIGN_BW_ANDASSIGN_BW_ORASSIGN_BW_XORASSIGN_CONCATASSIGN_LSHIFTASSIGN_RSHIFTCASTPRE_INCPOST_INCPRE_DECPOST_DECLOADLOAD_REFCONSTJUMPJUMP_TRUEJUMP_FALSECALLECHO"

var _Operator_index = [...]uint16{0, 4, 7, 13, 23, 26, 29, 32, 35, 38, 41, 47, 52, 58, 64, 70, 76, 81, 90, 99, 112, 114, 116, 119, 122, 129, 139, 153, 169, 175, 186, 192, 202, 212, 222, 232, 242, 252, 265, 277, 290, 303, 316, 329, 333, 340, 348, 355, 363, 367, 375, 380, 384, 393, 403, 407, 411}

func (i Operator) String() string {
	if i >= Operator(len(_Operator_index)-1) {
		return "Operator(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Operator_name[_Operator_index[i]:_Operator_index[i+1]]
}
