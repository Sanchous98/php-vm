// Code generated by "stringer -type=Operator -linecomment"; DO NOT EDIT.

package vm

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[OpNoop-0]
	_ = x[OpPop-1]
	_ = x[OpReturn-2]
	_ = x[OpReturnValue-3]
	_ = x[OpAdd-4]
	_ = x[OpSub-5]
	_ = x[OpMul-6]
	_ = x[OpDiv-7]
	_ = x[OpMod-8]
	_ = x[OpPow-9]
	_ = x[OpBwAnd-10]
	_ = x[OpBwOr-11]
	_ = x[OpBwXor-12]
	_ = x[OpBwNot-13]
	_ = x[OpShiftLeft-14]
	_ = x[OpShiftRight-15]
	_ = x[OpEqual-16]
	_ = x[OpNotEqual-17]
	_ = x[OpIdentical-18]
	_ = x[OpNotIdentical-19]
	_ = x[OpNot-20]
	_ = x[OpGreater-21]
	_ = x[OpLess-22]
	_ = x[OpGreaterOrEqual-23]
	_ = x[OpLessOrEqual-24]
	_ = x[OpCompare-25]
	_ = x[OpAssignRef-26]
	_ = x[OpArrayNew-27]
	_ = x[OpArrayAccessRead-28]
	_ = x[OpArrayAccessWrite-29]
	_ = x[OpArrayAccessPush-30]
	_ = x[OpArrayUnset-31]
	_ = x[OpPropertyGet-32]
	_ = x[OpPropertySet-33]
	_ = x[OpPropertyIsSet-34]
	_ = x[OpPropertyUnset-35]
	_ = x[OpConcat-36]
	_ = x[OpUnset-37]
	_ = x[_opOneOperand-37]
	_ = x[OpAssertType-38]
	_ = x[OpAssign-39]
	_ = x[OpAssignAdd-40]
	_ = x[OpAssignSub-41]
	_ = x[OpAssignMul-42]
	_ = x[OpAssignDiv-43]
	_ = x[OpAssignMod-44]
	_ = x[OpAssignPow-45]
	_ = x[OpAssignBwAnd-46]
	_ = x[OpAssignBwOr-47]
	_ = x[OpAssignBwXor-48]
	_ = x[OpAssignConcat-49]
	_ = x[OpAssignShiftLeft-50]
	_ = x[OpAssignShiftRight-51]
	_ = x[OpCast-52]
	_ = x[OpPreIncrement-53]
	_ = x[OpPostIncrement-54]
	_ = x[OpPreDecrement-55]
	_ = x[OpPostDecrement-56]
	_ = x[OpLoad-57]
	_ = x[OpLoadRef-58]
	_ = x[OpConst-59]
	_ = x[OpJump-60]
	_ = x[OpJumpTrue-61]
	_ = x[OpJumpFalse-62]
	_ = x[OpCall-63]
	_ = x[OpEcho-64]
	_ = x[OpIsSet-65]
}

const _Operator_name = "NOOPPOPRETURNRETURN_VALADDSUBMULDIVMODPOWBW_ANDBW_ORBW_XORBW_NOTLSHIFTRSHIFTEQUALNOT_EQUALIDENTICALNOT_IDENTICALNOTGTLTGTELTECOMPAREASSIGN_REFARRAY_NEWARRAY_ACCESS_READARRAY_ACCESS_WRITEARRAY_ACCESS_PUSHARRAY_UNSETPROPERTY_GETPROPERTY_SETPROPERTY_ISSETPROPERTY_UNSETCONCATUNSETASSERT_TYPEASSIGNASSIGN_ADDASSIGN_SUBASSIGN_MULASSIGN_DIVASSIGN_MODASSIGN_POWASSIGN_BW_ANDASSIGN_BW_ORASSIGN_BW_XORASSIGN_CONCATASSIGN_LSHIFTASSIGN_RSHIFTCASTPRE_INCPOST_INCPRE_DECPOST_DECLOADLOAD_REFCONSTJUMPJUMP_TRUEJUMP_FALSECALLECHOISSET"

var _Operator_index = [...]uint16{0, 4, 7, 13, 23, 26, 29, 32, 35, 38, 41, 47, 52, 58, 64, 70, 76, 81, 90, 99, 112, 115, 117, 119, 122, 125, 132, 142, 151, 168, 186, 203, 214, 226, 238, 252, 266, 272, 277, 288, 294, 304, 314, 324, 334, 344, 354, 367, 379, 392, 405, 418, 431, 435, 442, 450, 457, 465, 469, 477, 482, 486, 495, 505, 509, 513, 518}

func (i Operator) String() string {
	if i >= Operator(len(_Operator_index)-1) {
		return "Operator(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Operator_name[_Operator_index[i]:_Operator_index[i+1]]
}
