// Code generated by "stringer -type=Operator -linecomment"; DO NOT EDIT.

package vm

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[OpNoop-0]
	_ = x[OpPop-1]
	_ = x[OpReturn-2]
	_ = x[OpReturnValue-3]
	_ = x[OpAdd-4]
	_ = x[OpAddInt-5]
	_ = x[OpAddFloat-6]
	_ = x[OpAddArray-7]
	_ = x[OpAddBool-8]
	_ = x[OpSub-9]
	_ = x[OpSubInt-10]
	_ = x[OpSubFloat-11]
	_ = x[OpSubBool-12]
	_ = x[OpMul-13]
	_ = x[OpMulInt-14]
	_ = x[OpMulFloat-15]
	_ = x[OpMulBool-16]
	_ = x[OpDiv-17]
	_ = x[OpDivInt-18]
	_ = x[OpDivFloat-19]
	_ = x[OpDivBool-20]
	_ = x[OpMod-21]
	_ = x[OpModInt-22]
	_ = x[OpModFloat-23]
	_ = x[OpModBool-24]
	_ = x[OpPow-25]
	_ = x[OpPowInt-26]
	_ = x[OpPowFloat-27]
	_ = x[OpPowBool-28]
	_ = x[OpBwAnd-29]
	_ = x[OpBwOr-30]
	_ = x[OpBwXor-31]
	_ = x[OpBwNot-32]
	_ = x[OpShiftLeft-33]
	_ = x[OpShiftRight-34]
	_ = x[OpEqual-35]
	_ = x[OpNotEqual-36]
	_ = x[OpIdentical-37]
	_ = x[OpNotIdentical-38]
	_ = x[OpGreater-39]
	_ = x[OpLess-40]
	_ = x[OpGreaterOrEqual-41]
	_ = x[OpLessOrEqual-42]
	_ = x[OpCompare-43]
	_ = x[OpArrayFetch-44]
	_ = x[OpConcat-45]
	_ = x[OpLoadString-46]
	_ = x[_opOneOperand-46]
	_ = x[OpAssertType-47]
	_ = x[OpAssign-48]
	_ = x[OpAssignAdd-49]
	_ = x[OpAssignSub-50]
	_ = x[OpAssignMul-51]
	_ = x[OpAssignDiv-52]
	_ = x[OpAssignMod-53]
	_ = x[OpAssignPow-54]
	_ = x[OpAssignBwAnd-55]
	_ = x[OpAssignBwOr-56]
	_ = x[OpAssignBwXor-57]
	_ = x[OpAssignConcat-58]
	_ = x[OpAssignShiftLeft-59]
	_ = x[OpAssignShiftRight-60]
	_ = x[OpArrayPut-61]
	_ = x[OpArrayPush-62]
	_ = x[OpCast-63]
	_ = x[OpPreIncrement-64]
	_ = x[OpPostIncrement-65]
	_ = x[OpPreDecrement-66]
	_ = x[OpPostDecrement-67]
	_ = x[OpLoad-68]
	_ = x[OpConst-69]
	_ = x[OpJump-70]
	_ = x[OpJumpZ-71]
	_ = x[OpJumpNZ-72]
	_ = x[OpCall-73]
}

const _Operator_name = "NOOPPOPRETURNRETURN_VALADDADD_INTADD_FLOATADD_ARRAYADD_BOOLSUBSUB_INTSUB_FLOATSUB_BOOLMULMUL_INTMUL_FLOATMUL_BOOLDIVDIV_INTDIV_FLOATDIV_BOOLMODMOD_INTMOD_FLOATMOD_BOOLPOWPOW_INTPOW_FLOATPOW_BOOLBW_ANDBW_ORBW_XORBW_NOTLSHIFTRSHIFTEQUALNOT_EQUALIDENTICALNOT_IDENTICALGTLTGTELTECOMPAREARRAY_FETCHCONCATLOAD_STRINGASSERT_TYPEASSIGNASSIGN_ADDASSIGN_SUBASSIGN_MULASSIGN_DIVASSIGN_MODASSIGN_POWASSIGN_BW_ANDASSIGN_BW_ORASSIGN_BW_XORASSIGN_CONCATASSIGN_LSHIFTASSIGN_RSHIFTARRAY_PUTARRAY_PUSHCASTPRE_INCPOST_INCPRE_DECPOST_DECLOADCONSTJUMPJUMP_ZJUMP_NZCALL"

var _Operator_index = [...]uint16{0, 4, 7, 13, 23, 26, 33, 42, 51, 59, 62, 69, 78, 86, 89, 96, 105, 113, 116, 123, 132, 140, 143, 150, 159, 167, 170, 177, 186, 194, 200, 205, 211, 217, 223, 229, 234, 243, 252, 265, 267, 269, 272, 275, 282, 293, 299, 310, 321, 327, 337, 347, 357, 367, 377, 387, 400, 412, 425, 438, 451, 464, 473, 483, 487, 494, 502, 509, 517, 521, 526, 530, 536, 543, 547}

func (i Operator) String() string {
	if i >= Operator(len(_Operator_index)-1) {
		return "Operator(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Operator_name[_Operator_index[i]:_Operator_index[i+1]]
}
